services:
  # Main Backend API Service
  - type: web
    name: futurepath-backend
    env: node
    plan: starter
    buildCommand: |
      cd backend && npm install
    startCommand: cd backend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 5000
      - key: JWT_SECRET
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: MONGODB_URI
        sync: false
      - key: REDIS_URL
        sync: false
    healthCheckPath: /health
    autoDeploy: true

  # Frontend Web Service
  - type: web
    name: futurepath-frontend
    env: static
    buildCommand: |
      cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/dist
    envVars:
      - key: VITE_API_URL
        value: https://futurepath-backend.onrender.com
      - key: VITE_WS_URL
        value: wss://futurepath-realtime.onrender.com
    autoDeploy: true

  # Real-time Stock Service
  - type: web
    name: futurepath-realtime
    env: node
    plan: starter
    buildCommand: |
      cd backend && npm install
    startCommand: cd backend && npm run start:realtime
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 5001
      - key: REDIS_URL
        sync: false
    healthCheckPath: /health
    autoDeploy: true

  # SIP Advisor Python Service
  - type: web
    name: futurepath-sip
    env: python
    plan: starter
    buildCommand: |
      cd backend/sip_advisor && pip install -r requirements.txt
    startCommand: cd backend/sip_advisor && uvicorn sip_api_server:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: PORT
        value: 5002
      - key: GEMINI_API_KEY
        sync: false
    healthCheckPath: /health
    autoDeploy: true

  # Gold Service
  - type: web
    name: futurepath-gold
    env: node
    plan: starter
    buildCommand: |
      cd backend && npm install
    startCommand: cd backend && node gold-server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 5003
      - key: REDIS_URL
        sync: false
    healthCheckPath: /health
    autoDeploy: true

  # Stock Advisor Python Service
  - type: web
    name: futurepath-stock-advisor
    env: python
    plan: starter
    buildCommand: |
      cd backend/stock_advisor && pip install -r requirements.txt
    startCommand: cd backend/stock_advisor && python api_server.py
    envVars:
      - key: PORT
        value: 5004
      - key: OPENAI_API_KEY
        sync: false
    healthCheckPath: /health
    autoDeploy: true

# Database Services
databases:
  - name: futurepath-mongodb
    plan: starter
    databaseName: futurepath_ai
    user: futurepath_user

  - name: futurepath-redis
    plan: starter
