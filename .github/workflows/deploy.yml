name: Deploy FuturePath AI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Build and Deploy
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_WS_URL: ${{ secrets.VITE_WS_URL }}
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: frontend

  # Backend Build and Test
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd backend
          npm ci
      
      - name: Run tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret
          MONGODB_URI: mongodb://localhost:27017/test
      
      - name: Deploy to Railway
        if: github.ref == 'refs/heads/main'
        uses: bervProject/railway-deploy@v1.0.3
        with:
          railway-token: ${{ secrets.RAILWAY_TOKEN }}
          service: futurepath-backend

  # Python Services
  python-services:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install SIP Advisor dependencies
        run: |
          cd backend/sip_advisor
          pip install -r requirements.txt
      
      - name: Install Stock Advisor dependencies
        run: |
          cd backend/stock_advisor
          pip install -r requirements.txt
      
      - name: Deploy Python services
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying Python services to your chosen platform"
